{"ast":null,"code":"import _defineProperty from \"/home/thien/Documents/doanreact/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/thien/Documents/doanreact/src/context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); //<RoomContext.Provider value={'hello}\n\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      room: [],\n      sortedRooms: [],\n      featuredRoom: [],\n      loading: true\n    };\n  }\n\n  //getData{\n  componentDidMount() {\n    let rooms = this.formatData(items);\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/home/thien/Documents/doanreact/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","room","sortedRooms","featuredRoom","loading","componentDidMount","rooms","formatData","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,QAAlB;AACA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CAEA;;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEhDK,KAFgD,GAEzC;AACHC,MAAAA,IAAI,EAAC,EADF;AAEHC,MAAAA,WAAW,EAAC,EAFT;AAGHC,MAAAA,YAAY,EAAC,EAHV;AAIHC,MAAAA,OAAO,EAAC;AAJL,KAFyC;AAAA;;AAUhD;AACAC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,KAAK,GAAG,KAAKC,UAAL,CAAgBX,KAAhB,CAAZ;AACH;;AACDW,EAAAA,UAAU,CAACX,KAAD,EAAO;AACb,QAAIY,SAAS,GAAIZ,KAAK,CAACa,GAAN,CAAUC,IAAI,IAAI;AAClC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;;AACG,UAAIhB,IAAI,qBAAOS,IAAI,CAACI,MAAZ;AAAmBD,QAAAA,MAAnB;AAA0BF,QAAAA;AAA1B,QAAR;AACH,KAJgB,CAAjB;AAKH;;AAGDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,oBAAO,KAAKlB,KAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKmB,KAAL,CAAWC,QADZ,CADJ;AAOC;;AA/B2C;AAkCpD,MAAMC,YAAY,GAAIxB,WAAW,CAACyB,QAAlC;AAEA,SAAOvB,YAAP,EAAsBsB,YAAtB,EAAoCxB,WAApC","sourcesContent":["import React, { Component } from 'react';\n\nimport items from './data';\nconst RoomContext = React.createContext();\n\n//<RoomContext.Provider value={'hello}\n\nexport default class RoomProvider extends Component {\n\n    state ={\n        room:[],\n        sortedRooms:[],\n        featuredRoom:[],\n        loading:true\n        \n\n    };\n    //getData{\n    componentDidMount(){\n        let rooms = this.formatData(items)\n    }\n    formatData(items){\n        let tempItems =  items.map(item => {\n         let id = item.sys.id\n         let images = item.fields.images.map(image => image.fields.file.url);   \n            let room = {...item.fields,images,id}\n        })\n    }\n\n    \n    render() {\n        return (\n            <RoomContext.Provider value ={{...this.state }}>\n            {this.props.children}\n\n\n            </RoomContext.Provider>\n        );\n        }\n}\n\nconst RoomConsumer  = RoomContext.Consumer;\n\nexport{RoomProvider , RoomConsumer ,RoomContext}"]},"metadata":{},"sourceType":"module"}